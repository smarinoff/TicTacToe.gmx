<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_space</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!occupied) {
    sprite_index = spr_space;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!occupied) {
    sprite_index = spr_space_highlight;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!occupied) {
    occupied = true;
    sprite_index = spr_space;
    
    var victoryText = "Player " + string(global.turn) + " wins!";
    
    if (global.turn = 1) {
        instance_create(x + 150, y + 150, obj_mark_x);
        occupant = "x";
        global.turn = 2;
    } else {
        instance_create(x + 150, y + 150, obj_mark_o);
        occupant = "o";
        global.turn = 1;
    }

    var i;
    var match = true;
    
    //Check column
    for (i = 0; i &lt; 3; i++) {
    
        show_debug_message("checking if " + global.spaces[xpos,i].occupant + " = " + occupant);
    
        if (global.spaces[xpos,i].occupant != occupant) {
            match = false;
            break;
        }
    }
    
    if (match) {
        //end game;
        game_restart(); draw_text(10, 10, victoryText);
    } else {
        match = true;
    }
    
    //Check row
    for (i = 0; i &lt; 3; i++) {
        if (global.spaces[i,ypos].occupant != occupant) {
            match = false;
            break;
        }
    }
    
    if (match) {
        //end game;
        game_restart(); draw_text(10, 10, victoryText);
    } else {
        match = true;
    }
    
    //Check diagonal
    for (i = 0; i &lt; 3; i++) {
        if (global.spaces[i,i].occupant != occupant) {
            match = false;
            break;
        }
    }
    
    if (match) {
        //end game;
        game_restart(); draw_text(10, 10, victoryText);
    } else {
        match = true;
    }
    
    //Check anti-diagonal
    for (i = 0; i &lt; 3; i++) {
        if (global.spaces[i,2-i].occupant != occupant) {
            match = false;
            break;
        }
    }
    
    if (match) {
        //end game;
        game_restart(); draw_text(10, 10, victoryText);
    } else {
        if (instance_number(obj_mark_x) == 5) {
            //draw game;
            game_restart(); draw_text(10, 10, "It's a draw!");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
